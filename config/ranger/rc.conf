# ===================================================================
# This file contains the default startup commands for ranger.
# To change them, it is recommended to create the file
# ~/.config/ranger/rc.conf and add your custom commands there.
#
# If you copy this whole file there, add this line to your options.py
# so it is not loaded twice:
#
#     load_default_rc = False
#
# The purpose of this file is mainly to define keybindings.  For
# changing settings or running more complex python code, use the
# configuation file "options.py" or define commands in "commands.py".
#
# Each line is a command that will be run before the user interface
# is initialized.  As a result, you can not use commands which rely
# on the UI such as :delete or :mark.
# ===================================================================

# ===================================================================
# == Settings
# ===================================================================
set preview_images true
set preview_images_method ueberzug
# set use_preview_script false
set preview_files true

# ===================================================================
# == Command Aliases in the Console
# ===================================================================

alias q    quit
alias q!   quitall

# ===================================================================
# == Define keys for the browser
# ===================================================================

# Custom functions
map <C-o> run_with


map R     reload_cwd
map <C-r> redraw_window

map i display_file
map ? help
map <F1> help
map W display_log
map w taskview_open
map S shell $SHELL

map :  console
map !  console shell
map @  console -p6 shell  %%s
map f  console find
map cd console cd

# Tagging / Marking
map t       tag_toggle
map T       tag_remove
map "<any>  tag_toggle tag=%any
map <Space> mark_files toggle=True
map <C-a>   mark_files all=True toggle=True

# In case you work on a keyboard with dvorak layout
map <UP>       move up=1
map <DOWN>     move down=1
map <LEFT>     move left=1
map <RIGHT>    move right=1
map <HOME>     move to=0
map <END>      move to=-1
map <PAGEDOWN> move down=1   pages=True
map <PAGEUP>   move up=1     pages=True
map <CR>       move right=1
map <DELETE>   console delete
map <INSERT>   console touch

copymap <HOME>     b
copymap <END>      e

# --- COPYING ---
map yy copy
map yp shell -d echo -n %d/%f | xclip

# --- CUTTING ---
map cy cut
map cp uncat

# --- DELETE ---
map dd delete

# --- FILESYSTEM ---
# map ds get_cumulative_size

# --- PASTE ---
map pp paste
map po paste overwrite=True
map pl paste_symlink relative=False
map pL paste_symlink relative=True

# --- RENAMING ---
map rx console rename
map rr eval fm.open_console('rename ' + fm.thisfile.basename)
map rb eval fm.open_console('rename ' + fm.thisfile.basename, position=7)
# map kk console open_with shell echo "vim"
# map ka  chain draw_possible_programs; console open_with

# --- SEARCHING ---
map /  console search
map n  search_next
map N  search_next forward=False

# --- GOING SOMEWHERE ---
map gh cd ~
map ge cd /etc
map gu cd /usr
map gd cd /dev
map gv cd /var
map gl cd /var/log
map gm cd /run/media/gedi
map gM cd /media
map gr cd /

# --- TABS ---
map <a-w>     tab_new ~
map <a-c>     tab_close
map <TAB>     tab_move 1
map <a-1>     tab_open 1
map <a-2>     tab_open 2
map <a-3>     tab_open 3
map <a-4>     tab_open 4
map <a-5>     tab_open 5
map <a-6>     tab_open 6
map <a-7>     tab_open 7
map <a-8>     tab_open 8
map <a-9>     tab_open 9

# --- SORTING ---
map sr eval fm.settings.sort_reverse ^= True
map ss chain set sort=size;      set sort_reverse=False
map sb chain set sort=basename;  set sort_reverse=False
map sn chain set sort=natural;   set sort_reverse=False
map sm chain set sort=mtime;     set sort_reverse=False
map sc chain set sort=ctime;     set sort_reverse=False
map sa chain set sort=atime;     set sort_reverse=False
map st chain set sort="type";    set sort_reverse=False

map sS chain set sort=size;      set sort_reverse=True
map sB chain set sort=basename;  set sort_reverse=True
map sN chain set sort=natural;   set sort_reverse=True
map sM chain set sort=mtime;     set sort_reverse=True
map sC chain set sort=ctime;     set sort_reverse=True
map sA chain set sort=atime;     set sort_reverse=True
map sT chain set sort="type";    set sort_reverse=True

# --- SETTINGS ---
map zc    toggle_option collapse_preview
map zd    toggle_option sort_directories_first
map zi    toggle_option flushinput
map <C-h> toggle_option show_hidden
map zh    toggle_option show_hidden
map zm    toggle_option mouse_enabled
map zp    toggle_option preview_files
map zP    toggle_option preview_directories
map zs    toggle_option sort_case_insensitive
map zv    toggle_option use_preview_script
map zf    console filter

# --- BOOKMARKS ---
map `<any>  enter_bookmark %any
map '<any>  enter_bookmark %any
map m<any>  set_bookmark %any
map um<any> unset_bookmark %any

map m<bg>   draw_bookmarks
copymap m<bg>  um<bg> `<bg> '<bg>

# ===================================================================
# == Define keys for the console
# ===================================================================
# Note: Unmapped keys are passed directly to the console.

# Basic
cmap <tab>   eval fm.ui.console.tab()
cmap <s-tab> eval fm.ui.console.tab(-1)
cmap <ESC>   eval fm.ui.console.close()
cmap <CR>    eval fm.ui.console.execute()

# Move around
cmap <up>    eval fm.ui.console.history_move(-1)
cmap <down>  eval fm.ui.console.history_move(1)
cmap <left>  eval fm.ui.console.move(left=1)
cmap <right> eval fm.ui.console.move(right=1)
cmap <home>  eval fm.ui.console.move(right=0, absolute=True)
cmap <end>   eval fm.ui.console.move(right=-1, absolute=True)

# Line Editing
cmap <backspace>  eval fm.ui.console.delete(-1)
cmap <delete>     eval fm.ui.console.delete(0)
cmap <C-w>        eval fm.ui.console.delete_word()
cmap <C-k>        eval fm.ui.console.delete_rest(1)
cmap <C-u>        eval fm.ui.console.delete_rest(-1)
cmap <C-y>        eval fm.ui.console.paste()

# Note: There are multiple ways to express backspaces.  <backspace> (code 263)
# and <backspace2> (code 127).  To be sure, use both.
copycmap <backspace> <backspace2>

# This special expression allows typing in numerals:
cmap <allow_quantifiers> false

# ===================================================================
# == Pager Keybindings
# ===================================================================

# Movement
pmap  <down>      pager_move  down=1
pmap  <up>        pager_move  up=1
pmap  <left>      pager_move  left=4
pmap  <right>     pager_move  right=4
pmap  <home>      pager_move  to=0
pmap  <end>       pager_move  to=-1
pmap  <pagedown>  pager_move  down=1.0  pages=True
pmap  <pageup>    pager_move  up=1.0    pages=True
pmap  <C-d>       pager_move  down=0.5  pages=True
pmap  <C-u>       pager_move  up=0.5    pages=True

copypmap <UP>       k  <C-p>
copypmap <DOWN>     j  <C-n> <CR>
copypmap <LEFT>     h
copypmap <RIGHT>    l
copypmap <HOME>     g
copypmap <END>      G
copypmap <C-d>      d
copypmap <C-u>      u
copypmap <PAGEDOWN> n  f  <C-F>  <Space>
copypmap <PAGEUP>   p  b  <C-B>

# Basic
pmap     <ESC> pager_close
copypmap <ESC> q Q i <F3>
pmap E      edit_file

# ===================================================================
# == Taskview Keybindings
# ===================================================================

# Movement
tmap <up>        taskview_move up=1
tmap <down>      taskview_move down=1
tmap <home>      taskview_move to=0
tmap <end>       taskview_move to=-1
tmap <pagedown>  taskview_move down=1.0  pages=True
tmap <pageup>    taskview_move up=1.0    pages=True
tmap <C-d>       taskview_move down=0.5  pages=True
tmap <C-u>       taskview_move up=0.5    pages=True

copytmap <UP>       k  <C-p>
copytmap <DOWN>     j  <C-n> <CR>
copytmap <HOME>     g
copytmap <END>      G
copytmap <C-u>      u
copytmap <PAGEDOWN> n  f  <C-F>  <Space>
copytmap <PAGEUP>   p  b  <C-B>

# Changing priority and deleting tasks
tmap J          eval -q fm.ui.taskview.task_move(-1)
tmap K          eval -q fm.ui.taskview.task_move(0)
tmap dd         eval -q fm.ui.taskview.task_remove()
tmap <pagedown> eval -q fm.ui.taskview.task_move(-1)
tmap <pageup>   eval -q fm.ui.taskview.task_move(0)
tmap <delete>   eval -q fm.ui.taskview.task_remove()

# Basic
tmap <ESC> taskview_close
copytmap <ESC> q Q w
